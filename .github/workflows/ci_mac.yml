name: macOS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci-macos:
    strategy:
      matrix:
        os: [macos-13, macos-15]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # Cache Homebrew packages
    - name: Cache Homebrew packages
      uses: actions/cache@v3
      id: cache-brew
      with:
        path: ~/Library/Caches/Homebrew
        key: ${{ runner.os }}-${{ matrix.os }}-brew-llvm-${{ hashFiles('.github/workflows/ci_mac.yml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.os }}-brew-llvm-

    - name: Install LLVM via Homebrew
      run: |
        brew update
        brew install llvm@20

        # Set the correct LLVM path based on architecture
        if [[ "${{ matrix.os }}" == "macos-13" ]]; then
          # Intel macOS (x86_64)
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> $GITHUB_ENV
          echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH
        else
          # ARM macOS (M1/M2)
          echo 'export PATH="/opt/homebrew/opt/llvm/bin:$PATH"' >> $GITHUB_ENV
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH
        fi

        # Verify mlir-opt is available
        which mlir-opt || echo "mlir-opt not found in PATH"

    # Install Poetry using the snok action
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: false

    # Cache Poetry dependencies
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/Library/Caches/pypoetry
        key: ${{ runner.os }}-${{ matrix.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry env use python3.12
        poetry install

    - name: Run Tests
      run: |
        # Print PATH for debugging
        echo "PATH: $PATH"

        # Verify mlir-opt is available before running tests
        which mlir-opt || echo "mlir-opt not found in PATH"

        poetry run pytest tests -v
